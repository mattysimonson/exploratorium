% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crosstabs.R
\name{survtable}
\alias{survtable}
\title{Create easy-to-export survey crosstabs}
\usage{
survtable(s, outcome_vars, grouping_vars = NULL, filter_vars = NULL,
  new_outcome_name = "outcome", new_group_name = "group", wrap = T)
}
\arguments{
\item{s}{A tbl_svy object created using the srvyr package.}

\item{outcome_vars}{A character vector naming the column(s) in \code{s} to be used
as outcomes variable(s). These must be binary or categorial columns in s (convert
beforehand if needed).}

\item{grouping_vars}{A character vector naming the column(s) in \code{s} to be used
as grouping variable(s). These must be binary or categorial columns in s
(convert beforehand if needed).}

\item{filter_vars}{character or character vector with names of
filter varibles. These must be binary columns in s of type logical
(convert beforehand if needed). They will be applied seperately, not
in succession, in order to allow on create more overlapping groups.
Each variable is set to equal T. If more elaborate filtering is
required, use filter( ) beforehand.}

\item{new_outcome_name}{Character with intended name of the column
to hold the names of the outcome variables. Ignored if only 1 outcome.}

\item{new_group_name}{A character with intended name of the column to
hold the names of the filter variables being treated as groups.
Ignored if less than 2 filter_vars.}

\item{wrap}{A logical indicating to return html code that will print
the data to the Viewer window in Rstudio for copy and pasting into
other programs.}
}
\value{
A long formate tibble, or if wrap = T, a kableExtra table in html.
Each of the initial character columns is named for a grouping variable and
list combination of grouping categories for that row.
The later numeric columns are named for the outcome categories and list the
percentages falling into each. Rows should sum to 100, unless outcome is binary
in which case only the column for "TRUE" is displayed to avoid redudancy.
}
\description{
This function creates crosstabs for any number of grouping, filter,
and outcome variables.
}
\details{
This function outputs a wide format table with a column for each
grouping variable listing its categories and a column of values for each
response category of the outcome(s). Rows will sum to 100%
If outcomes are binary only one column of values is shown
If there are multiple outcomes, an outcome column is added to indicate
which outcome is being used for each row. If multiple filter variables,
a filter column is added to indicated which filter is used on each row
(this allows you to create groups that overlap)
}
\examples{
load("data/ca_school_svy.rda")

# Simple, no groups
ca_school_svy \%>\%
  survtable(outcome_vars = "stype")

# Multiple grouping variables
ca_school_svy \%>\%
  survtable(outcome_vars = "stype",
                 grouping_vars = c("sch.wide", "comp.imp"))

# Multiple outcomes
ca_school_svy \%>\%
 survtable(outcome_vars = c("sch.wide", "comp.imp"),
                grouping_vars = "stype",
                new_outcome_name = "met_standards")

# Binary outcome
ca_school_svy \%>\%
 survtable(outcome_vars = "winner",
                grouping_vars = "stype")

# Overlapping groupting variables
ca_school_svy \%>\%
  mutate(school_wide = sch.wide == "Yes",
         comparable_improvement = comp.imp == "Yes") \%>\%
 survtable(outcome_vars = "poverty",
           filter_vars = c("school_wide","comparable_improvement"),
           new_group_name = "met_standards")

# Delay wrapping in order to modify the output first
ca_school_svy \%>\%
survtable(outcome_vars = c("sch.wide", "comp.imp"),
                grouping_vars = "stype",
                new_outcome_name = "met_standards",
                wrap = F) \%>\%
mutate(met_standards = recode(met_standards, sch.wide = "school wide",
                              comp.imp = "comparable improvement")) \%>\%
wrap()
rm(ca_school_svy)
}
